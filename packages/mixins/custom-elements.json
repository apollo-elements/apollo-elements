{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "apollo-client-mixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "Mixin which applies a specific `ApolloClient` instance to the element.",
          "name": "ApolloClientMixin",
          "members": [
            {
              "kind": "field",
              "name": "client",
              "type": {
                "text": "ApolloClient<NormalizedCacheObject>"
              },
              "description": "The client specified with `ApolloClientMixin`."
            }
          ],
          "parameters": [
            {
              "name": "client",
              "type": {
                "text": "ApolloClient<NormalizedCacheObject>"
              },
              "description": "The specific `ApolloClient` instance."
            },
            {
              "name": "superclass",
              "type": {
                "text": "B"
              },
              "description": "An element that implements the `ApolloElementInterface`."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloClientMixin",
          "declaration": {
            "name": "ApolloClientMixin",
            "module": "apollo-client-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "apollo-element-mixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ApolloElementMixin",
          "description": "`ApolloElementMixin`: class mixin for apollo custom elements."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloElementMixin",
          "declaration": {
            "name": "ApolloElementMixin",
            "module": "apollo-element-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "apollo-mutation-mixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ApolloMutationMixin",
          "members": [
            {
              "kind": "field",
              "name": "documentType",
              "static": true,
              "type": {
                "text": "'mutation'"
              },
              "default": "'mutation'"
            },
            {
              "kind": "field",
              "name": "controller",
              "default": "ApolloMutationController"
            },
            {
              "kind": "field",
              "name": "called",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "mutation",
              "type": {
                "text": "ComponentDocument<D> | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "optimisticResponse",
              "type": {
                "text": "OptimisticResponseType<D, V>"
              }
            },
            {
              "kind": "field",
              "name": "refetchQueries",
              "type": {
                "text": "RefetchQueriesType<D> | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "fetchPolicy",
              "type": {
                "text": "Extract<C.FetchPolicy, 'no-cache'>"
              }
            },
            {
              "kind": "field",
              "name": "awaitRefetchQueries",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "ignoreResults",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onCompleted",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Data<D>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onError",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_error",
                  "type": {
                    "text": "Error"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updater",
              "return": {
                "type": {
                  "text": "ReturnType<C.MutationUpdaterFn<Data<D>>>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "type": {
                    "text": "Parameters<C.MutationUpdaterFn<Data<D>>>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mutate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<C.FetchResult<Data<D>>>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "optional": true,
                  "type": {
                    "text": "Partial<C.MutationOptions<Data<D>, Variables<D, V>>>"
                  }
                }
              ],
              "description": "This resolves a single mutation according to the options specified and returns a Promise which is either resolved with the resulting data or rejected with an error."
            }
          ],
          "attributes": [
            {
              "name": "await-refetch-queries"
            },
            {
              "name": "refetch-queries"
            }
          ],
          "mixins": [
            {
              "name": "ApolloElementMixin",
              "module": "/apollo-element-mixin.js"
            },
            {
              "name": "dedupeMixin",
              "package": "@open-wc/dedupe-mixin"
            }
          ],
          "parameters": [
            {
              "name": "base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloMutationMixin",
          "declaration": {
            "name": "ApolloMutationMixin",
            "module": "apollo-mutation-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "apollo-query-mixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ApolloQueryMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloQueryMixin",
          "declaration": {
            "name": "ApolloQueryMixin",
            "module": "apollo-query-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "apollo-subscription-mixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ApolloSubscriptionMixin",
          "description": "`ApolloSubscriptionMixin`: class mixin for apollo-subscription elements."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloSubscriptionMixin",
          "declaration": {
            "name": "ApolloSubscriptionMixin",
            "module": "apollo-subscription-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "controller-host-mixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ControllerHostMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControllerHostMixin",
          "declaration": {
            "name": "ControllerHostMixin",
            "module": "controller-host-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "graphql-script-child-mixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "GraphQLScriptChildMixin",
          "members": [
            {
              "kind": "field",
              "name": "mo",
              "type": {
                "text": "MutationObserver"
              },
              "privacy": "private",
              "description": "Updates the element state in reaction to GraphQL or JSON script child changes."
            },
            {
              "kind": "method",
              "name": "matchNode",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "Node"
                  }
                }
              ],
              "description": "When encountering a DOM Mutation, update the element's state if relevant."
            },
            {
              "kind": "method",
              "name": "onDOMMutation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "records",
                  "type": {
                    "text": "MutationRecord[]"
                  }
                }
              ],
              "description": "Update the element state in reaction to DOM updates that change the\ndeclarative GraphQL document or JSON-variable scripts"
            },
            {
              "kind": "method",
              "name": "parseGQL",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "this['document']"
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "parseVariables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "this['variables']"
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchDocument",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<this['document']>"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDOMGraphQLDocument",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<this['document']>"
                }
              },
              "summary": "Get a GraphQL DocumentNode from the element's GraphQL script child"
            },
            {
              "kind": "method",
              "name": "getDOMVariables",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "this['variables']"
                }
              },
              "summary": "Gets operation variables from the element's JSON script child"
            }
          ],
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "B"
              }
            }
          ],
          "mixins": [
            {
              "name": "dedupeMixin",
              "package": "@open-wc/dedupe-mixin"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GraphQLScriptChildMixin",
          "declaration": {
            "name": "GraphQLScriptChildMixin",
            "module": "graphql-script-child-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ApolloElementMixin",
          "declaration": {
            "name": "ApolloElementMixin",
            "module": "./apollo-element-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ApolloQueryMixin",
          "declaration": {
            "name": "ApolloQueryMixin",
            "module": "./apollo-query-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ApolloMutationMixin",
          "declaration": {
            "name": "ApolloMutationMixin",
            "module": "./apollo-mutation-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ApolloSubscriptionMixin",
          "declaration": {
            "name": "ApolloSubscriptionMixin",
            "module": "./apollo-subscription-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ApolloClientMixin",
          "declaration": {
            "name": "ApolloClientMixin",
            "module": "./apollo-client-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "GraphQLScriptChildMixin",
          "declaration": {
            "name": "GraphQLScriptChildMixin",
            "module": "./graphql-script-child-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "TypePoliciesMixin",
          "declaration": {
            "name": "TypePoliciesMixin",
            "module": "./type-policies-mixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidateVariablesMixin",
          "declaration": {
            "name": "ValidateVariablesMixin",
            "module": "./validate-variables-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "type-policies-mixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "Lazily adds [`TypePolicies`](https://www.apollographql.com/docs/react/caching/cache-configuration/#typepolicy-fields)\nto the Apollo client when the element connects to the DOM,\nfrom the element's `typePolicies` instance property.",
          "name": "TypePoliciesMixin",
          "members": [
            {
              "kind": "field",
              "name": "typePolicies",
              "type": {
                "text": "TypePolicies"
              },
              "description": "`TypePolicies` to lazy-load."
            }
          ],
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "B"
              }
            }
          ],
          "mixins": [
            {
              "name": "dedupeMixin",
              "package": "@open-wc/dedupe-mixin"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TypePoliciesMixin",
          "declaration": {
            "name": "TypePoliciesMixin",
            "module": "type-policies-mixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "validate-variables-mixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "Mixin which prevents query or subscription operations from fetching until their required variables are set.",
          "name": "ValidateVariablesMixin",
          "members": [
            {
              "kind": "method",
              "name": "shouldSubscribe",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<SubscriptionOptions>"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "B"
              },
              "description": "An element which implements either `ApolloQueryInterface` or `ApolloSubscriptionInterface`."
            }
          ],
          "mixins": [
            {
              "name": "dedupeMixin",
              "package": "@open-wc/dedupe-mixin"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidateVariablesMixin",
          "declaration": {
            "name": "ValidateVariablesMixin",
            "module": "validate-variables-mixin.js"
          }
        }
      ]
    }
  ]
}
