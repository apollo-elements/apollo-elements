:host {
  position: relative;
  max-width: 100%;
  display: grid;
  grid-template-areas: 'head' 'body';
  grid-template-rows: min-content 1fr;
  margin-bottom: 1rem;
}

.visually-hidden {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
}

header {
  display: flex;
  align-items: center;
  gap: 16px;
  flex-flow: row wrap;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  background: var(--markdown-table-row-odd-background-color, #f6f8fa);
  padding: 6px 10px;
  transition: background 0.2s ease-in-out;
}

:host([data-inherited-from]) header {
  justify-content: space-between;
  overflow-x: hidden;
}

:host([data-inherited-from]:not([expanded])) header {
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  background: var(--markdown-syntax-background-color);
}

:host([data-inherited-from]) header ::slotted([slot="name"]) {
  cursor: pointer;
}

:host([data-inherited-from]) header ::slotted([slot="type"]) {
  display: none !important;
}

type-doc:not([data-inherited-from]) [slot="type"]::before {
  content: 'type: ';
}

#inheritance {
  margin-inline-start: auto;
}

#inheritance button {
  color: inherit;
  background: none;
  border: none;
  margin-inline-end: 3px;
}

#inheritance button,
#inheritance button svg {
  height: 24px;
  width: 24px;
  transform: rotate(0deg);
  transition: transform 0.2s ease-in-out;
}

:host([expanded]) #inheritance button svg {
  transform: rotate(180deg);
}

#body {
  background: var(--markdown-syntax-background-color);
  padding: 1rem 1.6rem;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}

#body ::slotted(p:last-child) {
  margin: 0 !important;
}

#body ::slotted(h3) {
  margin-top: 4px !important;
}

#body ::slotted(.returns + p:last-child) {
  float: right;
}

/* nested type-doc */
#body ::slotted(type-doc) {
  margin-bottom: 0;
  background: transparent;
  padding: 0.3rem 0.8rem;
}

:host([kind="return"]) header,
:host([kind="parameter"]) header {
  background: none;
  padding-left: 0;
}

:host([kind="return"]) #body,
:host([kind="parameter"]) #body {
  padding: 0;
}

#body,
header,
#body ::slotted(:not(type-doc)) {
  max-width: 100%;
}

@media (max-width: 640px) {
  #body,
  header,
  #body ::slotted(:not(type-doc):not(h2):not(h3)) {
    overflow: auto;
  }
}
