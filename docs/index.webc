---yaml
title: Apollo Elements
slogan: Build high-performance web apps with GraphQL and web components.

callToActionItems:
  - text: Guides
    href: /guides/
  - text: API Docs
    href: /api/

frameworkDemos:
  - framework: angular
    frameworkAlt: Angular
    sandboxId: apollo-elements-in-angular-9smgl
    module: /src/app/app.component.html
    color: '#dd0031'

  - framework: preact
    frameworkAlt: Preact
    sandboxId: apollo-elements-in-preact-yowom
    module: /src/components/LaunchesDemo.js
    color: '#673ab8'

  - framework: react
    frameworkAlt: React
    sandboxId: apollo-elements-in-react-00ev3
    module: /src/LaunchesDemo.js
    color: '#61dafb'

  - framework: svelte
    frameworkAlt: Svelte
    sandboxId: apollo-elements-in-svelte-u6js9
    module: /LaunchesDemo.svelte
    color: '#ff3e00'

  - framework: vue
    frameworkAlt: Vue
    sandboxId: apollo-elements-in-vue-cq769
    module: /src/components/ApolloElementsDemo.vue
    color: '#41b883'

libraries:
  - lib: mixins
    name: Vanilla
    logo: html5

  - lib: lit-apollo
    name: Lit
    logo: lit

  - lib: fast
    name: FAST
    logo: fast

  - lib: haunted
    name: Haunted
    logo: haunted

  - lib: atomico
    name: Atomico
    logo: atomico

  - lib: hybrids
    name: Hybrids
    logo: hybrids

  - lib: polymer
    name: Polymer
    logo: polymer

---
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Apollo Elements</title>
    <meta property="og:title" content="Apollo Elements">
    <meta name="generator" content="rocket 0.1">
    <meta name="msapplication-TileColor" content="black">
    <meta name="theme-color" content="black">
    <meta property="og:site_name" content="Apollo Elements">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://apolloelements.dev/_assets/social/apollo-elements-95de180c1aa9816ae1a19a4fd8995539.png">
    <meta property="og:url" content="https://apolloelements.dev/">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="description" content="Build high-performance GraphQL web apps with Apollo Elements">
    <meta property="og:description" content="Build high-performance GraphQL web apps with Apollo Elements">
    <link rel="canonical" href="https://apolloelements.dev/">
    <link rel="apple-touch-icon" sizes="180x180" href="assets/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="assets/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="assets/favicon-16x16.png">
    <link rel="manifest" href="assets/webmanifest.json">
    <link rel="mask-icon" href="assets/safari-pinned-tab.svg" color="white">
    <link rel="webmention" href="https://webmention.io/apolloelements.dev/webmention">
    <link rel="pingback" href="https://webmention.io/apolloelements.dev/xmlrpc">
    <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin="">
    <link rel="stylesheet" webc:keep href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&amp;display=optional">
    <link rel="stylesheet" webc:keep href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&amp;display=optional">
    <link rel="stylesheet" webc:keep href="https://fonts.googleapis.com/css2?family=Recursive:slnt,wght,CASL,CRSV,MONO@-15..0,300..800,0..1,0..1,0..1&amp;display=swap">
  </head>
  <body layout="layout-home">
    <apollo-elements-header></apollo-elements-header>
    <apollo-elements-sidebar></apollo-elements-sidebar>
    <main>
      <img class="page-logo" src="_assets/logo.svg" alt="Stylized Letter A surrounded by Angle Brackets" width="250px" height="250px">

      <h1 class="page-title">Apollo Elements</h1>

      <p class="page-slogan">Build high-performance web apps with GraphQL and web components.</p>

      <nav class="call-to-action-list">
        <ul>
          <li><a class="call-to-action" href="/guides/">Guides</a></li>
          <li><a class="call-to-action" href="/api/">API Docs</a></li>
        </ul>
      </nav>

      <docs-playground id="query-spacex" playground-name="mainpage"></docs-playground>

      <h2 class="reason-header" id="why-apollo-elements">Why Apollo Elements?</h2>
      <section class="reasons">
        <article>
          <h3>High-Performance</h3>
          Leverage the modern web platform to deliver less JavaScript, without sacrificing <abbr title="developer experience">DX</abbr>.
        </article>
        <article>
          <h3>GraphQL</h3>
          Write declarative, expressive frontends and manage client-side state using GraphQL.
        </article>
        <article>
          <h3>Interoperable</h3>
          Use your GraphQL components in any other frontend framework, or none!
        </article>
      </section>

      <p>
        Write GraphQL web applications with <strong>declarative HTML</strong> templates.
        Define <strong>custom</strong> query, mutation, or subscription components in JavaScript or TypeScript using your favourite web component library.
        <strong>Mix and match</strong> programming styles and libraries in a single app, or publish GraphQL-connected components for use in any front-end framework.
      </p>

      <h2 id="use-your-favourite-web-components-library">Use your Favourite Web Components Library</h2>
      <p>Apollo Elements comes with support for popular web components libraries.
         Components built using different libraries can coexist seamlessly in the same app.</p>

      <ul id="libraries">
        <li webc:for="library of libraries">
          <a :href=`./api/libraries/${library.lib}/` class=`library ${library.lib}`>
            <figure>
              <file-include :href=`./_assets/brand-logos/${library.logo}.svg`></file-include>
              <figcaption @text=library.name></figcaption>
            </figure>
          </a>
        </li>
      </ul>

      <h2 id="interoperable-1">Interoperable</h2>
      <p><strong>Write GraphQL components once</strong> and <strong>use them everywhere</strong> with ease.
        Elements created with Apollo Elements work in any framework or none,
        even in Angular, Preact, React, Svelte, or Vue apps.</p>
      <p>These demos all import the same Apollo Element component from NPM.</p>

      <wibbler-wobbler>
        <code-tabs id="demos" collection="frameworks">
          <article id="default-tab" slot="default">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 39.794 39.794">
              <path d="M32.901 39.794a3.32 3.32 0 01-1.933-.604L10.182 24.344l-6.001 6a.998.998 0 01-1.703-.622L.004 1.086A1 1 0 011.086.004l28.638 2.475a1 1 0 01.622 1.703l-6 6 14.847 20.786c.926 1.297.769 3.197-.359 4.325l-3.539 3.539c-.637.635-1.516.962-2.394.962zM10.075 22.038c.202 0 .406.061.581.186l21.475 15.339c.499.357 1.315.288 1.748-.146l3.539-3.539c.433-.434.501-1.25.146-1.749l-15.34-21.474a1 1 0 01.107-1.288l5.081-5.081L2.098 2.098l2.188 25.314 5.081-5.081a.999.999 0 01.708-.293z"/>
            </svg>
            <p>Click a tab to view the demo</p>
          </article>

<code-tab webc:for="demo of frameworkDemos"
          no-copy
          @id="`${demo.framework}`"
          @synonyms="`${demo.frameworkAlt}`"
          @label="`${demo.frameworkAlt}`"
          @color="`${demo.color}`"
          @icon-href="`/_assets/brand-logos/${demo.framework}.svg`">
  <codesandbox-button sandbox-id="`${demo.sandboxId}`" module="`${demo.module}`">
    <span slot="button" hidden></span>
  </codesandbox-button>
</code-tab>

        </code-tabs>
      </wibbler-wobbler>

    </main>
  <apollo-elements-footer></apollo-elements-footer>

  <noscript>
    <link rel="stylesheet" href="/_assets/_static/search/noscript.css">
    <link rel="stylesheet" href="/_assets/_static/noscript.css">
    <link rel="stylesheet" href="/_assets/_static/playground-elements/noscript.css">
    <link rel="stylesheet" href="/_assets/_static/code-tabs/noscript.css">
  </noscript>

  <script type="module" webc:keep>
    import './wibbler.js';
    const demos = document.getElementById('demos');
    demos.addEventListener('select', loadDemo);
    function loadDemo() {
      const sandbox = document.querySelector('#demos [selected] > *');
      sandbox.theme =
        document.body.getAttribute('theme') ||
        window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      sandbox.showDemo = true;
    }
  </script>
</body>

</html>
